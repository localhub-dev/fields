import Util from '../../utils.js';
import Field from '../field.js';

export default class Group extends Field {
  /**
   * When fields are related to each other often it makes sense for them to be displayed
   * visually grouped. Both modules and themes support grouping multiple fields together. 
   * @see {@link https://developers.hubspot.com/docs/cms/building-blocks/module-theme-fields-overview#field-groups}
   * @param {object} data The JSON data used to generate the field.
   * @param {Array<object>} [data.children=[]] An array of fields and groups they contain.
   * @param {boolean} [data.expanded=false] Field groups can be set to be expanded by
   * default by setting the expanded boolean property to true in the fields.json group
   * properties as shown in the example code above. Field groups are not expanded by
   * default and when using nested field groups, the parent group cannot make use of this
   * property.
   * @param {('content'|'style')} [data.tab='content'] The tab that the field should appear
   * on in the content editor. It may either be "content" (default) or "style".
   * -------------------------------------------------------------------------------------
   * @param {string} [data.help_text] Text that will appear in the editor via tooltip to
   * assist the content creator. Best used for information that is supplementary but not
   * required to use the field.
   * @param {string} [data.id] Unique id for a field. This is generated by HubSpot. When
   * building locally you do not need to specify this id.
   * @param {string} [data.inline_help_text] Help text that will be shown inline below the
   * label of the field (limit 300 chars). Best used for information required to use the field.
   * @param {string} [data.label='Field group'] The text the content creator sees describing the
   * field. May contain spaces.
   * @param {boolean} [data.locked=false] Determines if the field is editable in the content
   * editor. If true, the field will not appear in the content editor.
   * @param {string} [data.name='field_group'] The variable name you will use to refer to this
   * field's values, and is what the value of the field is stored against. Cannot contain
   * spaces or special characters. If no name is provided, it will default to a lower 
   * snake case value of the label.
   * @param {boolean} [data.required=false] Determines if the field can be left blank in the
   * editor. If true, content will not be allowed to publish without filling out this field.
   * @param {Array} [data.visibility] Determines the display conditions for a field.
   */
  constructor (data) {
    super(data);
    this.label = data.label || 'Field group';
    this.children = data.children || [];
    this.expanded = !!data.expanded;

    /**
     * Display width is useless for groups at the time of writing this, and HubSpot does
     * set it to null automatically, but we're documenting it here anyway.
     * @private
     * @readonly
     */
    this.display_width = null;

    /**
     * @readonly
     * @private
     */
    this.type = 'group';

    /**
     * Manually defined names get priority. If no name is set, try to set it to the lower
     * snake case of the label provided. If no label is set, fall back to hardcoded value.
     */
    this.name = data.name || Util.toSnakeCase(this.label) || 'field_group';

    /**
     * Make sure the tab value resolves to "CONTENT" or "STYLE", otherwise override
     * it to "CONTENT."
     */
    this.tab = [ 'CONTENT', 'STYLE' ].includes(data.tab?.toUpperCase()) ? data.tab.toUpperCase() : 'CONTENT';
  }
}
