import Util from '../../utils.js';
import Field from '../field.js';

export default class Link extends Field {
  /**
   * Link fields provide an easy interface for content creators to provide links to URLs
   * and email addresses. For external links, content creators choose "external". For email
   * links "email address". Finally for content hosted on the HubSpot CMS they can use
   * "content" which shows a list of all pages and blog posts in the account, file showing
   * file assets, and blog, showing all of the blog listings in the account. Link fields
   * are very similar to URL fields except for the key difference that they provide a UI
   * for "open in new window" and "tell search engines not to follow". If you do not want
   * content creators to have that control use the URL field. Link fields are supported
   * in modules.
   * @see {@link https://developers.hubspot.com/en/docs/cms/building-blocks/module-theme-fields#link}
   * @param {object} data The JSON data used to generate the field.
   * @param {object} [data.default={}] Font object with settings for size, sizing unit,
   * color, and styles for bold, italic, and underline. // @todo Document subproperties
   * @param {Array<string>} [data.supported_types=['external', 'content', 'file', 'email_address', 'blog']]
   * List of the types of links this field allows content creators to select. Remove types
   * from the list that you don't want content creators to have access to set.
   * @param {boolean} [data.show_advanced_rel_options=false] Whether content creators can
   * see advanced rel options. 
   * -------------------------------------------------------------------------------------
   * @param {string} [data.help_text] Text that will appear in the editor via tooltip to
   * assist the content creator. Best used for information that is supplementary but not
   * required to use the field.
   * @param {string} [data.id] Unique id for a field. This is generated by HubSpot. When
   * building locally you do not need to specify this id.
   * @param {string} [data.inline_help_text] Help text that will be shown inline below the
   * label of the field (limit 300 chars). Best used for information required to use the field.
   * @param {string} [data.label='Link field'] The text the content creator sees describing the
   * field. May contain spaces.
   * @param {boolean} [data.locked=false] Determines if the field is editable in the content
   * editor. If true, the field will not appear in the content editor.
   * @param {string} [data.name='link_field'] The variable name you will use to refer to this
   * field's values, and is what the value of the field is stored against. Cannot contain
   * spaces or special characters. If no name is provided, it will default to a lower 
   * snake case value of the label.
   * @param {boolean} [data.required=false] Determines if the field can be left blank in the
   * editor. If true, content will not be allowed to publish without filling out this field.
   * @param {Array} [data.visibility] Determines the display conditions for a field.
   * @param {'half_width'|null} [data.display_width=null] Allows for side by side module
   * fields in content editors, rather than full-width fields, when set to "half_width". The
   * field will appear side-by-side with the next field in the fields.json file, as long as
   * that field is also set to "half_width".
   */
  constructor (data = {}) {
    super(data);
    this.label = data.label || 'Link field';
    this.show_advanced_rel_options = !!data.show_advanced_rel_options;
    this.default = data.default || {
      open_in_new_tab: false,
      no_follow: false,
      sponsored: false,
      user_generated_content: false,
      url: {
        content_id: null,
        type: 'external',
        href: ''
      }
    };
    
    /**
     * Allow the user to enter lowercase array string values, and then automatically
     * convert them to uppercase ourself so they can be correctly processed by HubSpot.
     */
    this.supported_types = data.supported_types?.map(type => type.toUpperCase?.()) || [
      'EXTERNAL', 'CONTENT', 'FILE', 'EMAIL_ADDRESS', 'BLOG'
    ];

    /**
     * If a default URL type is provided, let's allow lowercase values and then automatically
     * convert them to uppercase ourself so they can be correctly processed by HubSpot.
     */
    if (this.default?.url?.type) {
      this.default.url.type = this.default.url.type?.toUpperCase?.(); 
    }

    /**
     * @readonly
     * @private
     */
    this.type = 'link';

    /**
     * Manually defined names get priority. If no name is set, try to set it to the lower
     * snake case of the label provided. If no label is set, fall back to hardcoded value.
     */
    this.name = data.name || Util.toSnakeCase(this.label) || 'link_field';
  }
}
