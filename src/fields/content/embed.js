import Util from '../../utils.js';
import Field from '../field.js';

export default class Embed extends Field {
  /**
   * Embed fields allow the user to add a URL from an oEmbed-enabled site or paste in an
   * embed code from another site. To learn more about oEmbed usage on HubSpot, and see use
   * cases, visit HubSpot's oEmbed document.
   * @see {@link https://oembed.com/#section7}
   * @see {@link https://developers.hubspot.com/docs/cms/building-blocks/module-theme-fields/oembed}
   * @see {@link https://developers.hubspot.com/en/docs/cms/building-blocks/module-theme-fields#embed}
   * @param {object} data The JSON data used to generate the field.
   * @param {Array<string>} [data.supported_source_types=['oembed', 'html']] Supported
   * source types for either oEmbed URLs ("oembed"), HTML embed code ("html"), or Media
   * Bridge ("media_bridge").
   * @param {Array<string>} [data.supported_oembed_types=['photo', 'video', 'link', 'rich']]
   * Supported oEmbed type including "photo", "video", "link", and "rich". Does not apply
   * to the `supported_source_types` of "html".
   * @param {Array} [data.supported_media_bridge_providers=[]] Array of provider IDs that
   * determine which Media Bridge providers are available to select content from.
   * Note: This param will also be populated when installing a Media Bridge Provider Application.
   * @param {object} [data.default={source_type: 'oembed'}] An array containing the
   * "source_type" parameter. This parameter has one string based value from the options
   * provided in the "supported_source_types" parameter. // @todo Document subproperties
   * -------------------------------------------------------------------------------------
   * @param {string} [data.help_text] Text that will appear in the editor via tooltip to
   * assist the content creator. Best used for information that is supplementary but not
   * required to use the field.
   * @param {string} [data.id] Unique id for a field. This is generated by HubSpot. When
   * building locally you do not need to specify this id.
   * @param {string} [data.inline_help_text] Help text that will be shown inline below the
   * label of the field (limit 300 chars). Best used for information required to use the field.
   * @param {string} [data.label='Embed field'] The text the content creator sees describing the
   * field. May contain spaces.
   * @param {boolean} [data.locked=false] Determines if the field is editable in the content
   * editor. If true, the field will not appear in the content editor.
   * @param {string} [data.name='embed_field'] The variable name you will use to refer to this
   * field's values, and is what the value of the field is stored against. Cannot contain
   * spaces or special characters. If no name is provided, it will default to a lower 
   * snake case value of the label.
   * @param {boolean} [data.required=false] Determines if the field can be left blank in the
   * editor. If true, content will not be allowed to publish without filling out this field.
   * @param {Array} [data.visibility] Determines the display conditions for a field.
   * @param {'half_width'|null} [data.display_width=null] Allows for side by side module
   * fields in content editors, rather than full-width fields, when set to "half_width". The
   * field will appear side-by-side with the next field in the fields.json file, as long as
   * that field is also set to "half_width".
   */
  constructor (data = {}) {
    super(data);
    this.label = data.label || 'Embed field';
    this.supported_source_types = data.supported_source_types || [ 'oembed', 'html' ];
    this.supported_oembed_types = data.supported_oembed_types || [ 'photo', 'video', 'link', 'rich' ];
    this.supported_media_bridge_providers = data.supported_media_bridge_providers || [];
    this.default = data.default || {
      source_type: 'oembed'
    };
    
    /**
     * @readonly
     * @private
     */
    this.type = 'embed';

    /**
     * Manually defined names get priority. If no name is set, try to set it to the lower
     * snake case of the label provided. If no label is set, fall back to hardcoded value.
     */
    this.name = data.name || Util.toSnakeCase(this.label) || 'embed_field';
  }
}

new Embed()